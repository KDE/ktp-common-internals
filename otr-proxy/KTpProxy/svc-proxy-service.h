#ifndef KTP_PROXY_SVC_PROXY_SERVICE_HEADER
#define KTP_PROXY_SVC_PROXY_SERVICE_HEADER

/*
 * This file contains D-Bus adaptor classes generated by qt-svc-gen.py.
 *
 * This file can be distributed under the same terms as the specification from
 * which it was generated.
 */

#include <TelepathyQt/AbstractAdaptor>
#include <TelepathyQt/Global>
#include <TelepathyQt/Types>

#include <QObject>
#include <QtDBus>

namespace Tp
{
namespace Service
{

/**
 * \class ProxyServiceAdaptor
 * \headerfile TelepathyQt/_gen/svc-proxy-service.h <TelepathyQt/_gen/svc-proxy-service.h>
 * \ingroup serviceproxyservice
 *
 * Adaptor class providing a 1:1 mapping of the D-Bus interface "org.kde.TelepathyProxy.ProxyService".
 */
class TP_QT_EXPORT ProxyServiceAdaptor : public Tp::AbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.TelepathyProxy.ProxyService")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.TelepathyProxy.ProxyService\">\n"
"    <signal name=\"ProxyConnected\">\n"
"      <arg type=\"o\" name=\"proxy\"/>\n"
"    </signal>\n"
"    <signal name=\"ProxyDisconnected\">\n"
"      <arg type=\"o\" name=\"proxy\"/>\n"
"    </signal>\n"
"  </interface>\n"
"")

public:
    ProxyServiceAdaptor(const QDBusConnection& dbusConnection, QObject* adaptee, QObject* parent);
    virtual ~ProxyServiceAdaptor();


Q_SIGNALS: // SIGNALS
    /**
     * Represents the exported D-Bus signal \c ProxyConnected on this object.
     *
     * Adaptees should export this signal as a Qt signal with the following signature:
     * void proxyconnected(const QDBusObjectPath& proxy);
     *
     * The adaptee signal will be automatically relayed as a D-Bus signal once emitted.
     *
     * \param proxy
     *     
     *     The object path of the connected proxy
     */
    void ProxyConnected(const QDBusObjectPath& proxy);
    /**
     * Represents the exported D-Bus signal \c ProxyDisconnected on this object.
     *
     * Adaptees should export this signal as a Qt signal with the following signature:
     * void proxydisconnected(const QDBusObjectPath& proxy);
     *
     * The adaptee signal will be automatically relayed as a D-Bus signal once emitted.
     *
     * \param proxy
     *     
     *     The object path of the disconnectd proxy type
     */
    void ProxyDisconnected(const QDBusObjectPath& proxy);
};

}
}

#endif
